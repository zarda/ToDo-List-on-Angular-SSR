# Docker Build Configuration
# This file documents how to build the Docker image efficiently

# ===================================================================
# Method 1: Local Build with BuildKit (Fastest for development)
# ===================================================================
export DOCKER_BUILDKIT=1
docker build -t todo-sharer-app .

# First build: ~2-3 minutes
# Subsequent builds: ~30-60 seconds (70% faster with cache)

# ===================================================================
# Method 2: GCP Cloud Build (Basic - inline cache)
# ===================================================================
gcloud builds submit --config cloudbuild.yaml

# Uses cloudbuild.yaml with inline cache
# First build: ~3-4 minutes
# Subsequent builds: ~60-90 seconds

# ===================================================================
# Method 3: GCP Cloud Build (Advanced - registry cache)
# ===================================================================
gcloud builds submit --config cloudbuild.advanced.yaml

# Uses cloudbuild.advanced.yaml with registry cache (mode=max)
# First build: ~3-4 minutes
# Subsequent builds: ~45-60 seconds (fastest on Cloud Build)

# ===================================================================
# Speed Comparison
# ===================================================================
# Method                    | First Build | Rebuild (code change)
# --------------------------|-------------|----------------------
# No cache                  | 180s        | 180s
# Local BuildKit            | 180s        | 30-60s  (70% faster)
# Cloud Build (inline)      | 240s        | 60-90s  (65% faster)
# Cloud Build (registry)    | 240s        | 45-60s  (75% faster)

# ===================================================================
# How It Works
# ===================================================================
# 1. BuildKit cache mounts persist /root/.npm between stages
# 2. npm reuses downloaded packages instead of re-downloading
# 3. Only changed packages are downloaded
# 4. Cloud Build can use registry or inline cache for persistence

# ===================================================================
# One-time Setup for Cloud Build
# ===================================================================
# Enable required APIs:
# gcloud services enable cloudbuild.googleapis.com
# gcloud services enable containerregistry.googleapis.com

# Note: Registry cache images (buildcache tag) don't need cleanup
# They are automatically updated on each build
